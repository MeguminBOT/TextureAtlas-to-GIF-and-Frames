# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'app.ui'
##
## Created by: Qt User Interface Compiler version 6.8.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractSpinBox, QApplication, QComboBox, QDoubleSpinBox,
    QFrame, QGroupBox, QLabel, QLineEdit,
    QListView, QMainWindow, QMenu, QMenuBar,
    QPushButton, QSizePolicy, QSpinBox, QStatusBar,
    QTabWidget, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(901, 777)
        MainWindow.setUnifiedTitleAndToolBarOnMac(True)
        self.select_directory = QAction(MainWindow)
        self.select_directory.setObjectName(u"select_directory")
        self.select_files = QAction(MainWindow)
        self.select_files.setObjectName(u"select_files")
        self.clear_export_list = QAction(MainWindow)
        self.clear_export_list.setObjectName(u"clear_export_list")
        self.fnf_import_settings = QAction(MainWindow)
        self.fnf_import_settings.setObjectName(u"fnf_import_settings")
        self.preferences = QAction(MainWindow)
        self.preferences.setObjectName(u"preferences")
        self.help_manual = QAction(MainWindow)
        self.help_manual.setObjectName(u"help_manual")
        self.help_fnf = QAction(MainWindow)
        self.help_fnf.setObjectName(u"help_fnf")
        self.show_contributors = QAction(MainWindow)
        self.show_contributors.setObjectName(u"show_contributors")
        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.tools_tab = QTabWidget(self.centralwidget)
        self.tools_tab.setObjectName(u"tools_tab")
        self.tools_tab.setGeometry(QRect(0, 0, 901, 721))
        self.tools_tab.setTabPosition(QTabWidget.TabPosition.North)
        self.tools_tab.setElideMode(Qt.TextElideMode.ElideLeft)
        self.tools_tab.setDocumentMode(False)
        self.tool_extract = QWidget()
        self.tool_extract.setObjectName(u"tool_extract")
        self.listbox_png = QListView(self.tool_extract)
        self.listbox_png.setObjectName(u"listbox_png")
        self.listbox_png.setGeometry(QRect(5, 10, 200, 621))
        self.listbox_png.setAlternatingRowColors(False)
        self.listbox_png.setProperty(u"isWrapping", False)
        self.listbox_data = QListView(self.tool_extract)
        self.listbox_data.setObjectName(u"listbox_data")
        self.listbox_data.setGeometry(QRect(210, 10, 200, 621))
        self.input_button = QPushButton(self.tool_extract)
        self.input_button.setObjectName(u"input_button")
        self.input_button.setGeometry(QRect(570, 10, 171, 24))
        self.output_button = QPushButton(self.tool_extract)
        self.output_button.setObjectName(u"output_button")
        self.output_button.setGeometry(QRect(570, 60, 171, 24))
        self.input_dir_label = QLabel(self.tool_extract)
        self.input_dir_label.setObjectName(u"input_dir_label")
        self.input_dir_label.setGeometry(QRect(430, 30, 451, 21))
        self.input_dir_label.setFrameShape(QFrame.Shape.NoFrame)
        self.input_dir_label.setFrameShadow(QFrame.Shadow.Plain)
        self.input_dir_label.setTextFormat(Qt.TextFormat.PlainText)
        self.input_dir_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.output_dir_label = QLabel(self.tool_extract)
        self.output_dir_label.setObjectName(u"output_dir_label")
        self.output_dir_label.setGeometry(QRect(430, 80, 451, 21))
        self.output_dir_label.setFrameShape(QFrame.Shape.NoFrame)
        self.output_dir_label.setFrameShadow(QFrame.Shadow.Plain)
        self.output_dir_label.setTextFormat(Qt.TextFormat.PlainText)
        self.output_dir_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.animation_export_group = QGroupBox(self.tool_extract)
        self.animation_export_group.setObjectName(u"animation_export_group")
        self.animation_export_group.setGeometry(QRect(458, 110, 191, 331))
        self.animation_export_group.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.animation_export_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.animation_export_group.setFlat(False)
        self.animation_export_group.setCheckable(True)
        self.animation_export_group.setChecked(False)
        self.animation_format_combobox = QComboBox(self.animation_export_group)
        self.animation_format_combobox.addItem("")
        self.animation_format_combobox.addItem("")
        self.animation_format_combobox.addItem("")
        self.animation_format_combobox.addItem("")
        self.animation_format_combobox.setObjectName(u"animation_format_combobox")
        self.animation_format_combobox.setGeometry(QRect(10, 50, 171, 24))
        self.animation_format_combobox.setEditable(False)
        self.animation_format_combobox.setMaxVisibleItems(5)
        self.animation_format_combobox.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.animation_format_combobox.setFrame(True)
        self.animation_format_combobox.setModelColumn(0)
        self.animation_format_label = QLabel(self.animation_export_group)
        self.animation_format_label.setObjectName(u"animation_format_label")
        self.animation_format_label.setGeometry(QRect(40, 30, 111, 16))
        self.animation_format_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.animation_format_label.setIndent(0)
        self.frame_rate_entry = QSpinBox(self.animation_export_group)
        self.frame_rate_entry.setObjectName(u"frame_rate_entry")
        self.frame_rate_entry.setGeometry(QRect(10, 100, 171, 24))
        self.frame_rate_entry.setCorrectionMode(QAbstractSpinBox.CorrectionMode.CorrectToNearestValue)
        self.frame_rate_entry.setProperty(u"showGroupSeparator", False)
        self.frame_rate_entry.setMinimum(1)
        self.frame_rate_entry.setMaximum(1000)
        self.frame_rate_entry.setValue(24)
        self.loop_delay_entry = QSpinBox(self.animation_export_group)
        self.loop_delay_entry.setObjectName(u"loop_delay_entry")
        self.loop_delay_entry.setGeometry(QRect(10, 150, 171, 24))
        self.loop_delay_entry.setAccelerated(True)
        self.loop_delay_entry.setCorrectionMode(QAbstractSpinBox.CorrectionMode.CorrectToNearestValue)
        self.loop_delay_entry.setMaximum(10000)
        self.loop_delay_entry.setValue(250)
        self.loop_delay_entry.setDisplayIntegerBase(10)
        self.min_period_entry = QSpinBox(self.animation_export_group)
        self.min_period_entry.setObjectName(u"min_period_entry")
        self.min_period_entry.setGeometry(QRect(10, 200, 171, 24))
        self.min_period_entry.setAccelerated(True)
        self.min_period_entry.setCorrectionMode(QAbstractSpinBox.CorrectionMode.CorrectToNearestValue)
        self.min_period_entry.setMaximum(10000)
        self.frame_rate_label = QLabel(self.animation_export_group)
        self.frame_rate_label.setObjectName(u"frame_rate_label")
        self.frame_rate_label.setGeometry(QRect(40, 80, 111, 16))
        self.frame_rate_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.loop_delay_label = QLabel(self.animation_export_group)
        self.loop_delay_label.setObjectName(u"loop_delay_label")
        self.loop_delay_label.setGeometry(QRect(40, 130, 111, 16))
        self.loop_delay_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.min_period_label = QLabel(self.animation_export_group)
        self.min_period_label.setObjectName(u"min_period_label")
        self.min_period_label.setGeometry(QRect(40, 180, 111, 16))
        self.min_period_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.scale_label = QLabel(self.animation_export_group)
        self.scale_label.setObjectName(u"scale_label")
        self.scale_label.setGeometry(QRect(40, 230, 111, 16))
        self.scale_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.threshold_label = QLabel(self.animation_export_group)
        self.threshold_label.setObjectName(u"threshold_label")
        self.threshold_label.setGeometry(QRect(40, 280, 111, 16))
        self.threshold_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.threshold_entry = QSpinBox(self.animation_export_group)
        self.threshold_entry.setObjectName(u"threshold_entry")
        self.threshold_entry.setGeometry(QRect(10, 300, 171, 24))
        self.threshold_entry.setAccelerated(True)
        self.threshold_entry.setCorrectionMode(QAbstractSpinBox.CorrectionMode.CorrectToNearestValue)
        self.threshold_entry.setMinimum(0)
        self.threshold_entry.setMaximum(100)
        self.threshold_entry.setValue(50)
        self.scale_entry = QDoubleSpinBox(self.animation_export_group)
        self.scale_entry.setObjectName(u"scale_entry")
        self.scale_entry.setGeometry(QRect(10, 250, 171, 24))
        self.scale_entry.setAccelerated(True)
        self.scale_entry.setCorrectionMode(QAbstractSpinBox.CorrectionMode.CorrectToNearestValue)
        self.scale_entry.setDecimals(2)
        self.scale_entry.setMinimum(0.010000000000000)
        self.scale_entry.setMaximum(100.000000000000000)
        self.scale_entry.setSingleStep(0.010000000000000)
        self.scale_entry.setValue(1.000000000000000)
        self.frame_export_group = QGroupBox(self.tool_extract)
        self.frame_export_group.setObjectName(u"frame_export_group")
        self.frame_export_group.setGeometry(QRect(658, 110, 191, 331))
        self.frame_export_group.setLayoutDirection(Qt.LayoutDirection.LeftToRight)
        self.frame_export_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.frame_export_group.setFlat(False)
        self.frame_export_group.setCheckable(True)
        self.frame_export_group.setChecked(False)
        self.frame_format_combobox = QComboBox(self.frame_export_group)
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.addItem("")
        self.frame_format_combobox.setObjectName(u"frame_format_combobox")
        self.frame_format_combobox.setGeometry(QRect(10, 50, 171, 24))
        self.frame_format_combobox.setEditable(False)
        self.frame_format_combobox.setMaxVisibleItems(10)
        self.frame_format_combobox.setSizeAdjustPolicy(QComboBox.SizeAdjustPolicy.AdjustToContentsOnFirstShow)
        self.frame_format_combobox.setFrame(True)
        self.frame_format_combobox.setModelColumn(0)
        self.frame_format_label = QLabel(self.frame_export_group)
        self.frame_format_label.setObjectName(u"frame_format_label")
        self.frame_format_label.setGeometry(QRect(40, 30, 111, 16))
        self.frame_format_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.frame_format_label.setIndent(0)
        self.frame_scale_label = QLabel(self.frame_export_group)
        self.frame_scale_label.setObjectName(u"frame_scale_label")
        self.frame_scale_label.setGeometry(QRect(40, 130, 111, 16))
        self.frame_scale_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.frame_scale_entry = QDoubleSpinBox(self.frame_export_group)
        self.frame_scale_entry.setObjectName(u"frame_scale_entry")
        self.frame_scale_entry.setGeometry(QRect(10, 150, 171, 24))
        self.frame_scale_entry.setAccelerated(True)
        self.frame_scale_entry.setCorrectionMode(QAbstractSpinBox.CorrectionMode.CorrectToNearestValue)
        self.frame_scale_entry.setDecimals(2)
        self.frame_scale_entry.setMinimum(0.010000000000000)
        self.frame_scale_entry.setMaximum(100.000000000000000)
        self.frame_scale_entry.setSingleStep(0.010000000000000)
        self.frame_scale_entry.setValue(1.000000000000000)
        self.frame_selection_combobox = QComboBox(self.frame_export_group)
        self.frame_selection_combobox.addItem("")
        self.frame_selection_combobox.addItem("")
        self.frame_selection_combobox.addItem("")
        self.frame_selection_combobox.addItem("")
        self.frame_selection_combobox.addItem("")
        self.frame_selection_combobox.addItem("")
        self.frame_selection_combobox.setObjectName(u"frame_selection_combobox")
        self.frame_selection_combobox.setGeometry(QRect(10, 100, 171, 24))
        self.frame_selection_label = QLabel(self.frame_export_group)
        self.frame_selection_label.setObjectName(u"frame_selection_label")
        self.frame_selection_label.setGeometry(QRect(40, 80, 111, 16))
        self.frame_selection_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.compression_settings_button = QPushButton(self.frame_export_group)
        self.compression_settings_button.setObjectName(u"compression_settings_button")
        self.compression_settings_button.setGeometry(QRect(10, 200, 171, 24))
        self.cropping_method_label = QLabel(self.tool_extract)
        self.cropping_method_label.setObjectName(u"cropping_method_label")
        self.cropping_method_label.setGeometry(QRect(500, 450, 111, 16))
        self.cropping_method_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.cropping_method_label.setIndent(0)
        self.cropping_method_combobox = QComboBox(self.tool_extract)
        self.cropping_method_combobox.addItem("")
        self.cropping_method_combobox.addItem("")
        self.cropping_method_combobox.addItem("")
        self.cropping_method_combobox.setObjectName(u"cropping_method_combobox")
        self.cropping_method_combobox.setGeometry(QRect(490, 470, 131, 24))
        self.filename_prefix_label = QLabel(self.tool_extract)
        self.filename_prefix_label.setObjectName(u"filename_prefix_label")
        self.filename_prefix_label.setGeometry(QRect(528, 510, 111, 16))
        self.filename_prefix_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.filename_prefix_label.setIndent(0)
        self.filename_prefix_entry = QLineEdit(self.tool_extract)
        self.filename_prefix_entry.setObjectName(u"filename_prefix_entry")
        self.filename_prefix_entry.setGeometry(QRect(520, 530, 131, 24))
        self.filename_suffix_label = QLabel(self.tool_extract)
        self.filename_suffix_label.setObjectName(u"filename_suffix_label")
        self.filename_suffix_label.setGeometry(QRect(666, 510, 111, 16))
        self.filename_suffix_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.filename_suffix_label.setIndent(0)
        self.filename_suffix_entry = QLineEdit(self.tool_extract)
        self.filename_suffix_entry.setObjectName(u"filename_suffix_entry")
        self.filename_suffix_entry.setGeometry(QRect(658, 530, 131, 24))
        self.filename_format_combobox = QComboBox(self.tool_extract)
        self.filename_format_combobox.addItem("")
        self.filename_format_combobox.addItem("")
        self.filename_format_combobox.addItem("")
        self.filename_format_combobox.setObjectName(u"filename_format_combobox")
        self.filename_format_combobox.setGeometry(QRect(690, 470, 131, 24))
        self.filename_format_label = QLabel(self.tool_extract)
        self.filename_format_label.setObjectName(u"filename_format_label")
        self.filename_format_label.setGeometry(QRect(700, 450, 111, 16))
        self.filename_format_label.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.filename_format_label.setIndent(0)
        self.advanced_filename_button = QPushButton(self.tool_extract)
        self.advanced_filename_button.setObjectName(u"advanced_filename_button")
        self.advanced_filename_button.setGeometry(QRect(560, 560, 191, 24))
        self.start_process_button = QPushButton(self.tool_extract)
        self.start_process_button.setObjectName(u"start_process_button")
        self.start_process_button.setGeometry(QRect(740, 635, 141, 32))
        self.start_process_button.setChecked(False)
        self.show_override_settings_button = QPushButton(self.tool_extract)
        self.show_override_settings_button.setObjectName(u"show_override_settings_button")
        self.show_override_settings_button.setGeometry(QRect(440, 635, 141, 32))
        self.override_spritesheet_settings_button = QPushButton(self.tool_extract)
        self.override_spritesheet_settings_button.setObjectName(u"override_spritesheet_settings_button")
        self.override_spritesheet_settings_button.setGeometry(QRect(5, 635, 200, 32))
        self.reset_button = QPushButton(self.tool_extract)
        self.reset_button.setObjectName(u"reset_button")
        self.reset_button.setGeometry(QRect(590, 635, 141, 32))
        self.override_animation_settings_button = QPushButton(self.tool_extract)
        self.override_animation_settings_button.setObjectName(u"override_animation_settings_button")
        self.override_animation_settings_button.setGeometry(QRect(210, 635, 200, 32))
        self.tools_tab.addTab(self.tool_extract, "")
        self.tool_generate = QWidget()
        self.tool_generate.setObjectName(u"tool_generate")
        self.label = QLabel(self.tool_generate)
        self.label.setObjectName(u"label")
        self.label.setGeometry(QRect(80, 170, 741, 251))
        font = QFont()
        font.setPointSize(48)
        self.label.setFont(font)
        self.label.setScaledContents(False)
        self.label.setWordWrap(True)
        self.tools_tab.addTab(self.tool_generate, "")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 901, 33))
        self.file_menu = QMenu(self.menubar)
        self.file_menu.setObjectName(u"file_menu")
        self.import_menu = QMenu(self.menubar)
        self.import_menu.setObjectName(u"import_menu")
        self.help_menu = QMenu(self.menubar)
        self.help_menu.setObjectName(u"help_menu")
        self.contributors_menu = QMenu(self.menubar)
        self.contributors_menu.setObjectName(u"contributors_menu")
        self.advanced_menu = QMenu(self.menubar)
        self.advanced_menu.setObjectName(u"advanced_menu")
        self.options_menu = QMenu(self.menubar)
        self.options_menu.setObjectName(u"options_menu")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.file_menu.menuAction())
        self.menubar.addAction(self.import_menu.menuAction())
        self.menubar.addAction(self.help_menu.menuAction())
        self.menubar.addAction(self.contributors_menu.menuAction())
        self.menubar.addAction(self.advanced_menu.menuAction())
        self.menubar.addAction(self.options_menu.menuAction())
        self.file_menu.addAction(self.select_directory)
        self.file_menu.addAction(self.select_files)
        self.file_menu.addAction(self.clear_export_list)
        self.import_menu.addAction(self.fnf_import_settings)
        self.help_menu.addAction(self.help_manual)
        self.help_menu.addAction(self.help_fnf)
        self.contributors_menu.addAction(self.show_contributors)
        self.options_menu.addAction(self.preferences)

        self.retranslateUi(MainWindow)

        self.tools_tab.setCurrentIndex(0)
        self.animation_format_combobox.setCurrentIndex(0)
        self.frame_format_combobox.setCurrentIndex(3)
        self.cropping_method_combobox.setCurrentIndex(1)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        self.select_directory.setText(QCoreApplication.translate("MainWindow", u"Select directory", None))
        self.select_files.setText(QCoreApplication.translate("MainWindow", u"Select files", None))
        self.clear_export_list.setText(QCoreApplication.translate("MainWindow", u"Clear export list", None))
        self.fnf_import_settings.setText(QCoreApplication.translate("MainWindow", u"FNF: Import settings from character data file", None))
        self.preferences.setText(QCoreApplication.translate("MainWindow", u"Preferences", None))
        self.help_manual.setText(QCoreApplication.translate("MainWindow", u"User Manual", None))
        self.help_fnf.setText(QCoreApplication.translate("MainWindow", u"FNF Guide", None))
        self.show_contributors.setText(QCoreApplication.translate("MainWindow", u"Show Contributors", None))
#if QT_CONFIG(statustip)
        self.tools_tab.setStatusTip("")
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.tool_extract.setStatusTip(QCoreApplication.translate("MainWindow", u"Extract frames from TextureAtlases. Extraction supports exporting as frames or animations.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.listbox_png.setStatusTip(QCoreApplication.translate("MainWindow", u"List of all spritesheets to extract", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.listbox_data.setStatusTip(QCoreApplication.translate("MainWindow", u"List of all the animations of the currently selected spritesheet", None))
#endif // QT_CONFIG(statustip)
        self.input_button.setText(QCoreApplication.translate("MainWindow", u"Select input directory", None))
        self.output_button.setText(QCoreApplication.translate("MainWindow", u"Select output directory", None))
        self.input_dir_label.setText(QCoreApplication.translate("MainWindow", u"No input directory selected", None))
        self.output_dir_label.setText(QCoreApplication.translate("MainWindow", u"No output directory selected", None))
#if QT_CONFIG(statustip)
        self.animation_export_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Animation export settings", None))
#endif // QT_CONFIG(statustip)
        self.animation_export_group.setTitle(QCoreApplication.translate("MainWindow", u"Export as animations", None))
        self.animation_format_combobox.setItemText(0, QCoreApplication.translate("MainWindow", u"GIF", None))
        self.animation_format_combobox.setItemText(1, QCoreApplication.translate("MainWindow", u"WebP", None))
        self.animation_format_combobox.setItemText(2, QCoreApplication.translate("MainWindow", u"APNG", None))
        self.animation_format_combobox.setItemText(3, QCoreApplication.translate("MainWindow", u"Custom FFMPEG", None))

#if QT_CONFIG(statustip)
        self.animation_format_combobox.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the format of animated images", None))
#endif // QT_CONFIG(statustip)
        self.animation_format_combobox.setPlaceholderText("")
        self.animation_format_label.setText(QCoreApplication.translate("MainWindow", u"Animation format", None))
#if QT_CONFIG(statustip)
        self.frame_rate_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the playback rate of animated images", None))
#endif // QT_CONFIG(statustip)
        self.frame_rate_entry.setSuffix(QCoreApplication.translate("MainWindow", u" fps", None))
        self.frame_rate_entry.setPrefix("")
#if QT_CONFIG(statustip)
        self.loop_delay_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Time to wait before looping the animation", None))
#endif // QT_CONFIG(statustip)
        self.loop_delay_entry.setSuffix(QCoreApplication.translate("MainWindow", u" ms", None))
#if QT_CONFIG(statustip)
        self.min_period_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Forces animated images to be played for at least the set amount of time.", None))
#endif // QT_CONFIG(statustip)
        self.min_period_entry.setSuffix(QCoreApplication.translate("MainWindow", u" ms", None))
        self.frame_rate_label.setText(QCoreApplication.translate("MainWindow", u"Frame rate", None))
        self.loop_delay_label.setText(QCoreApplication.translate("MainWindow", u"Loop delay", None))
        self.min_period_label.setText(QCoreApplication.translate("MainWindow", u"Minimum period", None))
        self.scale_label.setText(QCoreApplication.translate("MainWindow", u"Scale", None))
        self.threshold_label.setText(QCoreApplication.translate("MainWindow", u"Alpha threshold", None))
#if QT_CONFIG(statustip)
        self.threshold_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"[GIFs only!] Sets the alpha threshold of GIFs", None))
#endif // QT_CONFIG(statustip)
        self.threshold_entry.setSuffix(QCoreApplication.translate("MainWindow", u" %", None))
#if QT_CONFIG(statustip)
        self.scale_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the scale of animated images", None))
#endif // QT_CONFIG(statustip)
        self.scale_entry.setSuffix(QCoreApplication.translate("MainWindow", u" \u00d7", None))
#if QT_CONFIG(statustip)
        self.frame_export_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Frame export settings", None))
#endif // QT_CONFIG(statustip)
        self.frame_export_group.setTitle(QCoreApplication.translate("MainWindow", u"Export as frames", None))
        self.frame_format_combobox.setItemText(0, QCoreApplication.translate("MainWindow", u"AVIF", None))
        self.frame_format_combobox.setItemText(1, QCoreApplication.translate("MainWindow", u"BMP", None))
        self.frame_format_combobox.setItemText(2, QCoreApplication.translate("MainWindow", u"DDS", None))
        self.frame_format_combobox.setItemText(3, QCoreApplication.translate("MainWindow", u"PNG", None))
        self.frame_format_combobox.setItemText(4, QCoreApplication.translate("MainWindow", u"TGA", None))
        self.frame_format_combobox.setItemText(5, QCoreApplication.translate("MainWindow", u"TIFF", None))
        self.frame_format_combobox.setItemText(6, QCoreApplication.translate("MainWindow", u"WebP", None))

#if QT_CONFIG(statustip)
        self.frame_format_combobox.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the format of frame images", None))
#endif // QT_CONFIG(statustip)
        self.frame_format_combobox.setPlaceholderText("")
        self.frame_format_label.setText(QCoreApplication.translate("MainWindow", u"Frame format", None))
        self.frame_scale_label.setText(QCoreApplication.translate("MainWindow", u"Scale", None))
#if QT_CONFIG(statustip)
        self.frame_scale_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the scale of frames images", None))
#endif // QT_CONFIG(statustip)
        self.frame_scale_entry.setSuffix(QCoreApplication.translate("MainWindow", u" \u00d7", None))
        self.frame_selection_combobox.setItemText(0, QCoreApplication.translate("MainWindow", u"All", None))
        self.frame_selection_combobox.setItemText(1, QCoreApplication.translate("MainWindow", u"No duplicates", None))
        self.frame_selection_combobox.setItemText(2, QCoreApplication.translate("MainWindow", u"First", None))
        self.frame_selection_combobox.setItemText(3, QCoreApplication.translate("MainWindow", u"Last", None))
        self.frame_selection_combobox.setItemText(4, QCoreApplication.translate("MainWindow", u"First, Last", None))
        self.frame_selection_combobox.setItemText(5, QCoreApplication.translate("MainWindow", u"Custom", None))

#if QT_CONFIG(statustip)
        self.frame_selection_combobox.setStatusTip(QCoreApplication.translate("MainWindow", u"Which frames to export. \"All\" exports all frames, \"No duplicates\" only exports unique frames, \"First, Last\" exports the first and last frame of the animation.", None))
#endif // QT_CONFIG(statustip)
        self.frame_selection_label.setText(QCoreApplication.translate("MainWindow", u"Frame selection", None))
#if QT_CONFIG(statustip)
        self.compression_settings_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Controls compression settings for frame images", None))
#endif // QT_CONFIG(statustip)
        self.compression_settings_button.setText(QCoreApplication.translate("MainWindow", u"Compression settings", None))
        self.cropping_method_label.setText(QCoreApplication.translate("MainWindow", u"Cropping method", None))
        self.cropping_method_combobox.setItemText(0, QCoreApplication.translate("MainWindow", u"None", None))
        self.cropping_method_combobox.setItemText(1, QCoreApplication.translate("MainWindow", u"Animation based", None))
        self.cropping_method_combobox.setItemText(2, QCoreApplication.translate("MainWindow", u"Frame based", None))

#if QT_CONFIG(statustip)
        self.cropping_method_combobox.setStatusTip(QCoreApplication.translate("MainWindow", u"How cropping should be done. Note: \"Frame based\" only works on frames, animations will automatically use \"Animation based\" if \"Frame based\" was chosen.", None))
#endif // QT_CONFIG(statustip)
        self.filename_prefix_label.setText(QCoreApplication.translate("MainWindow", u"Filename prefix", None))
#if QT_CONFIG(statustip)
        self.filename_prefix_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Adds a prefix to the filename", None))
#endif // QT_CONFIG(statustip)
        self.filename_prefix_entry.setText("")
        self.filename_suffix_label.setText(QCoreApplication.translate("MainWindow", u"Filename suffix", None))
#if QT_CONFIG(statustip)
        self.filename_suffix_entry.setStatusTip(QCoreApplication.translate("MainWindow", u"Adds a suffix to the filename", None))
#endif // QT_CONFIG(statustip)
        self.filename_suffix_entry.setText("")
        self.filename_suffix_entry.setPlaceholderText("")
        self.filename_format_combobox.setItemText(0, QCoreApplication.translate("MainWindow", u"Standardized", None))
        self.filename_format_combobox.setItemText(1, QCoreApplication.translate("MainWindow", u"No spaces", None))
        self.filename_format_combobox.setItemText(2, QCoreApplication.translate("MainWindow", u"No special characters", None))

#if QT_CONFIG(statustip)
        self.filename_format_combobox.setStatusTip(QCoreApplication.translate("MainWindow", u"How filenames should be formatted. Standardized exports names as \"Spritesheet name - animation name\".", None))
#endif // QT_CONFIG(statustip)
        self.filename_format_label.setText(QCoreApplication.translate("MainWindow", u"Filename format", None))
#if QT_CONFIG(statustip)
        self.advanced_filename_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Advanced filename options allows using pattern matching to remove certain words or phrases from filenames. Supports \"Regular Expression\".", None))
#endif // QT_CONFIG(statustip)
        self.advanced_filename_button.setText(QCoreApplication.translate("MainWindow", u"Advanced filename options", None))
#if QT_CONFIG(statustip)
        self.start_process_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Starts extraction process", None))
#endif // QT_CONFIG(statustip)
        self.start_process_button.setText(QCoreApplication.translate("MainWindow", u"Start process", None))
#if QT_CONFIG(statustip)
        self.show_override_settings_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Opens a window showing all the current override settings.", None))
#endif // QT_CONFIG(statustip)
        self.show_override_settings_button.setText(QCoreApplication.translate("MainWindow", u"Show override settings", None))
#if QT_CONFIG(statustip)
        self.override_spritesheet_settings_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides the global settings for the selected spritesheet", None))
#endif // QT_CONFIG(statustip)
        self.override_spritesheet_settings_button.setText(QCoreApplication.translate("MainWindow", u"Override spritesheet settings", None))
#if QT_CONFIG(statustip)
        self.reset_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Resets the filelist and override settings", None))
#endif // QT_CONFIG(statustip)
        self.reset_button.setText(QCoreApplication.translate("MainWindow", u"Reset", None))
#if QT_CONFIG(statustip)
        self.override_animation_settings_button.setStatusTip(QCoreApplication.translate("MainWindow", u"Overrides the global settings for the selected animation", None))
#endif // QT_CONFIG(statustip)
        self.override_animation_settings_button.setText(QCoreApplication.translate("MainWindow", u"Override animation settings", None))
        self.tools_tab.setTabText(self.tools_tab.indexOf(self.tool_extract), QCoreApplication.translate("MainWindow", u"Extract", None))
        self.label.setText(QCoreApplication.translate("MainWindow", u"Under development. Check back in the future!", None))
        self.tools_tab.setTabText(self.tools_tab.indexOf(self.tool_generate), QCoreApplication.translate("MainWindow", u"Generate", None))
        self.file_menu.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.import_menu.setTitle(QCoreApplication.translate("MainWindow", u"Import", None))
        self.help_menu.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
        self.contributors_menu.setTitle(QCoreApplication.translate("MainWindow", u"Contributors", None))
        self.advanced_menu.setTitle(QCoreApplication.translate("MainWindow", u"Advanced", None))
        self.options_menu.setTitle(QCoreApplication.translate("MainWindow", u"Options", None))
        pass
    # retranslateUi

