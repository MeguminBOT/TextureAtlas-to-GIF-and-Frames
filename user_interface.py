# -*- coding: utf-8 -*-

################################################################################
## Form generated from reading UI file 'user_interfaceUTHsiQ.ui'
##
## Created by: Qt User Interface Compiler version 6.8.1
##
## WARNING! All changes made in this file will be lost when recompiling UI file!
################################################################################

from PySide6.QtCore import (QCoreApplication, QDate, QDateTime, QLocale,
    QMetaObject, QObject, QPoint, QRect,
    QSize, QTime, QUrl, Qt)
from PySide6.QtGui import (QAction, QBrush, QColor, QConicalGradient,
    QCursor, QFont, QFontDatabase, QGradient,
    QIcon, QImage, QKeySequence, QLinearGradient,
    QPainter, QPalette, QPixmap, QRadialGradient,
    QTransform)
from PySide6.QtWidgets import (QAbstractItemView, QApplication, QCheckBox, QComboBox,
    QDoubleSpinBox, QGroupBox, QFileDialog, QLabel, QLineEdit,
    QListView, QMainWindow, QMenu, QMenuBar,
    QProgressBar, QPushButton, QSizePolicy, QSpinBox,
    QStatusBar, QTabWidget, QWidget)

class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        if not MainWindow.objectName():
            MainWindow.setObjectName(u"MainWindow")
        MainWindow.resize(1000, 793)

        self.actionSelect_directory = QAction(MainWindow)
        self.actionSelect_directory.setObjectName(u"actionSelect_directory")
        self.actionSelect_files = QAction(MainWindow)
        self.actionSelect_files.setObjectName(u"actionSelect_files")
        self.actionClear_files_and_settings = QAction(MainWindow)
        self.actionClear_files_and_settings.setObjectName(u"actionClear_files_and_settings")
        self.actionUser_Manual = QAction(MainWindow)
        self.actionUser_Manual.setObjectName(u"actionUser_Manual")
        self.actionPreferences = QAction(MainWindow)
        self.actionPreferences.setObjectName(u"actionPreferences")

        self.centralwidget = QWidget(MainWindow)
        self.centralwidget.setObjectName(u"centralwidget")
        self.ui_tabber_tools = QTabWidget(self.centralwidget)
        self.ui_tabber_tools.setObjectName(u"ui_tabber_tools")
        self.ui_tabber_tools.setGeometry(QRect(10, 30, 981, 701))
        self.ui_tabber_tools.setTabShape(QTabWidget.TabShape.Rounded)
        self.ui_tabber_tools.setDocumentMode(False)
        self.ui_tabber_tools.setTabsClosable(False)
        self.ui_tabber_tools.setMovable(False)
        self.ui_tabber_tools.setTabBarAutoHide(False)
        self.ui_tab_spritesheet_extractor = QWidget()
        self.ui_tab_spritesheet_extractor.setObjectName(u"ui_tab_spritesheet_extractor")

        self.ui_input_group = QGroupBox(self.ui_tab_spritesheet_extractor)
        self.ui_input_group.setObjectName(u"ui_input_group")
        self.ui_input_group.setGeometry(QRect(500, 20, 431, 81))
        self.ui_input_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_input_group.setFlat(True)
        self.ui_input_field = QLineEdit(self.ui_input_group)
        self.ui_input_field.setObjectName(u"ui_input_field")
        self.ui_input_field.setGeometry(QRect(0, 20, 431, 20))
        self.ui_input_field.setFrame(False)
        self.ui_input_field.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_input_field.setCursorMoveStyle(Qt.CursorMoveStyle.LogicalMoveStyle)
        self.ui_input_field.setClearButtonEnabled(False)

        self.ui_button_select_directory = QPushButton(self.ui_input_group)
        self.ui_button_select_directory.setObjectName(u"ui_button_select_directory")
        self.ui_button_select_directory.setGeometry(QRect(70, 50, 141, 30))
        self.ui_button_select_directory.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.ui_button_select_directory.setToolTipDuration(-1)
        self.ui_button_select_directory.setAutoFillBackground(False)

        self.ui_button_select_files = QPushButton(self.ui_input_group)
        self.ui_button_select_files.setObjectName(u"ui_button_select_files")
        self.ui_button_select_files.setGeometry(QRect(220, 50, 141, 30))
        self.ui_button_select_files.setCursor(QCursor(Qt.CursorShape.ArrowCursor))
        self.ui_button_select_files.setToolTipDuration(-1)
        self.ui_button_select_files.setAutoFillBackground(False)

        self.ui_output_group = QGroupBox(self.ui_tab_spritesheet_extractor)
        self.ui_output_group.setObjectName(u"ui_output_group")
        self.ui_output_group.setGeometry(QRect(500, 120, 431, 91))
        self.ui_output_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_output_group.setFlat(True)
        self.ui_output_field = QLineEdit(self.ui_output_group)
        self.ui_output_field.setObjectName(u"ui_output_field")
        self.ui_output_field.setGeometry(QRect(0, 20, 431, 21))
        self.ui_output_field.setInputMethodHints(Qt.InputMethodHint.ImhNone)
        self.ui_output_field.setFrame(False)
        self.ui_output_field.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_output_field.setReadOnly(False)
        self.ui_output_field.setClearButtonEnabled(False)

        self.ui_button_save_directory = QPushButton(self.ui_output_group)
        self.ui_button_save_directory.setObjectName(u"ui_button_save_directory")
        self.ui_button_save_directory.setGeometry(QRect(140, 50, 151, 31))
        self.ui_button_save_directory.setCheckable(False)
        self.ui_button_save_directory.setFlat(False)

        self.ui_actions_group = QGroupBox(self.ui_tab_spritesheet_extractor)
        self.ui_actions_group.setObjectName(u"ui_actions_group")
        self.ui_actions_group.setGeometry(QRect(500, 230, 431, 51))
        self.ui_actions_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_actions_group.setFlat(True)

        self.ui_checkbox_create_png = QCheckBox(self.ui_actions_group)
        self.ui_checkbox_create_png.setObjectName(u"ui_checkbox_create_png")
        self.ui_checkbox_create_png.setGeometry(QRect(260, 20, 90, 20))
        self.ui_checkbox_create_png.setChecked(False)
        self.ui_checkbox_create_png.setAutoRepeat(False)

        self.ui_checkbox_create_webp = QCheckBox(self.ui_actions_group)
        self.ui_checkbox_create_webp.setObjectName(u"ui_checkbox_create_webp")
        self.ui_checkbox_create_webp.setGeometry(QRect(150, 20, 100, 20))
        self.ui_checkbox_create_webp.setChecked(False)
        self.ui_checkbox_create_webp.setAutoRepeat(False)

        self.ui_checkbox_create_gif = QCheckBox(self.ui_actions_group)
        self.ui_checkbox_create_gif.setObjectName(u"ui_checkbox_create_gif")
        self.ui_checkbox_create_gif.setGeometry(QRect(60, 20, 80, 20))
        self.ui_checkbox_create_gif.setTristate(False)

        self.ui_extraction_settings_group = QGroupBox(self.ui_tab_spritesheet_extractor)
        self.ui_extraction_settings_group.setObjectName(u"ui_extraction_settings_group")
        self.ui_extraction_settings_group.setGeometry(QRect(500, 320, 201, 181))
        self.ui_extraction_settings_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_extraction_settings_group.setFlat(True)
        self.ui_extraction_settings_group.setCheckable(False)

        self.ui_stepper_framerate = QSpinBox(self.ui_extraction_settings_group)
        self.ui_stepper_framerate.setObjectName(u"ui_stepper_framerate")
        self.ui_stepper_framerate.setGeometry(QRect(110, 30, 88, 22))
        self.ui_stepper_framerate.setFrame(False)
        self.ui_stepper_framerate.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_stepper_framerate.setAccelerated(False)
        self.ui_stepper_framerate.setProperty(u"showGroupSeparator", False)
        self.ui_stepper_framerate.setMaximum(999)
        self.ui_stepper_framerate.setValue(24)

        self.ui_stepper_loopdelay = QSpinBox(self.ui_extraction_settings_group)
        self.ui_stepper_loopdelay.setObjectName(u"ui_stepper_loopdelay")
        self.ui_stepper_loopdelay.setGeometry(QRect(110, 60, 88, 21))
        self.ui_stepper_loopdelay.setWrapping(False)
        self.ui_stepper_loopdelay.setFrame(False)
        self.ui_stepper_loopdelay.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_stepper_loopdelay.setMaximum(999)
        self.ui_stepper_loopdelay.setValue(250)
        self.ui_stepper_loopdelay.setDisplayIntegerBase(10)

        self.ui_stepper_alpha_threshold = QDoubleSpinBox(self.ui_extraction_settings_group)
        self.ui_stepper_alpha_threshold.setObjectName(u"ui_stepper_alpha_threshold")
        self.ui_stepper_alpha_threshold.setGeometry(QRect(110, 90, 88, 22))
        self.ui_stepper_alpha_threshold.setInputMethodHints(Qt.InputMethodHint.ImhDigitsOnly|Qt.InputMethodHint.ImhFormattedNumbersOnly)
        self.ui_stepper_alpha_threshold.setFrame(False)
        self.ui_stepper_alpha_threshold.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_stepper_alpha_threshold.setMaximum(1.000000000000000)
        self.ui_stepper_alpha_threshold.setSingleStep(0.010000000000000)
        self.ui_stepper_alpha_threshold.setValue(0.500000000000000)

        self.ui_label_framerate = QLabel(self.ui_extraction_settings_group)
        self.ui_label_framerate.setObjectName(u"ui_label_framerate")
        self.ui_label_framerate.setGeometry(QRect(10, 30, 101, 21))
        self.ui_label_framerate.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.ui_label_loopdelay = QLabel(self.ui_extraction_settings_group)
        self.ui_label_loopdelay.setObjectName(u"ui_label_loopdelay")
        self.ui_label_loopdelay.setGeometry(QRect(10, 60, 91, 21))
        self.ui_label_loopdelay.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.ui_label_alpha_threshold = QLabel(self.ui_extraction_settings_group)
        self.ui_label_alpha_threshold.setObjectName(u"ui_label_alpha_threshold")
        self.ui_label_alpha_threshold.setGeometry(QRect(10, 90, 91, 21))
        self.ui_label_alpha_threshold.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.ui_label_scale = QLabel(self.ui_extraction_settings_group)
        self.ui_label_scale.setObjectName(u"ui_label_scale")
        self.ui_label_scale.setGeometry(QRect(10, 120, 91, 21))
        self.ui_label_scale.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.ui_stepper_scale = QDoubleSpinBox(self.ui_extraction_settings_group)
        self.ui_stepper_scale.setObjectName(u"ui_stepper_scale")
        self.ui_stepper_scale.setGeometry(QRect(110, 120, 88, 22))
        self.ui_stepper_scale.setInputMethodHints(Qt.InputMethodHint.ImhDigitsOnly|Qt.InputMethodHint.ImhFormattedNumbersOnly)
        self.ui_stepper_scale.setFrame(False)
        self.ui_stepper_scale.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_stepper_scale.setMaximum(10.000000000000000)
        self.ui_stepper_scale.setSingleStep(0.010000000000000)
        self.ui_stepper_scale.setValue(1.000000000000000)

        self.ui_label_resample_filter = QLabel(self.ui_extraction_settings_group)
        self.ui_label_resample_filter.setObjectName(u"ui_label_resample_filter")
        self.ui_label_resample_filter.setGeometry(QRect(10, 150, 101, 21))
        self.ui_label_resample_filter.setAlignment(Qt.AlignmentFlag.AlignLeading|Qt.AlignmentFlag.AlignLeft|Qt.AlignmentFlag.AlignVCenter)

        self.ui_dropdown_resample_filter = QComboBox(self.ui_extraction_settings_group)
        self.ui_dropdown_resample_filter.addItem("")
        self.ui_dropdown_resample_filter.addItem("")
        self.ui_dropdown_resample_filter.addItem("")
        self.ui_dropdown_resample_filter.addItem("")
        self.ui_dropdown_resample_filter.setObjectName(u"ui_dropdown_resample_filter")
        self.ui_dropdown_resample_filter.setGeometry(QRect(110, 150, 88, 22))
        self.ui_dropdown_resample_filter.setDuplicatesEnabled(False)
        self.ui_dropdown_resample_filter.setFrame(True)

        self.ui_extra_settings_group = QGroupBox(self.ui_tab_spritesheet_extractor)
        self.ui_extra_settings_group.setObjectName(u"ui_extra_settings_group")
        self.ui_extra_settings_group.setGeometry(QRect(730, 320, 201, 181))
        self.ui_extra_settings_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_extra_settings_group.setFlat(True)
        self.ui_extra_settings_group.setCheckable(False)

        self.ui_checkbox_crop_pngs = QCheckBox(self.ui_extra_settings_group)
        self.ui_checkbox_crop_pngs.setObjectName(u"ui_checkbox_crop_pngs")
        self.ui_checkbox_crop_pngs.setGeometry(QRect(0, 50, 81, 21))
        self.ui_checkbox_crop_pngs.setChecked(False)
        self.ui_checkbox_crop_pngs.setAutoRepeat(False)

        self.ui_checkbox_hq_color = QCheckBox(self.ui_extra_settings_group)
        self.ui_checkbox_hq_color.setObjectName(u"ui_checkbox_hq_color")
        self.ui_checkbox_hq_color.setGeometry(QRect(0, 20, 81, 21))
        self.ui_checkbox_hq_color.setChecked(True)
        self.ui_checkbox_hq_color.setAutoRepeat(False)

        self.ui_checkbox_variable_delay = QCheckBox(self.ui_extra_settings_group)
        self.ui_checkbox_variable_delay.setObjectName(u"ui_checkbox_variable_delay")
        self.ui_checkbox_variable_delay.setGeometry(QRect(0, 80, 101, 21))
        self.ui_checkbox_variable_delay.setChecked(False)
        self.ui_checkbox_variable_delay.setAutoRepeat(False)

        self.ui_tab_button_start = QPushButton(self.ui_tab_spritesheet_extractor)
        self.ui_tab_button_start.setObjectName(u"ui_tab_button_start")
        self.ui_tab_button_start.setGeometry(QRect(660, 560, 111, 31))

        self.ui_filelist_group = QGroupBox(self.ui_tab_spritesheet_extractor)
        self.ui_filelist_group.setObjectName(u"ui_filelist_group")
        self.ui_filelist_group.setGeometry(QRect(50, 20, 431, 641))
        sizePolicy = QSizePolicy(QSizePolicy.Policy.Fixed, QSizePolicy.Policy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ui_filelist_group.sizePolicy().hasHeightForWidth())
        self.ui_filelist_group.setSizePolicy(sizePolicy)
        self.ui_filelist_group.setAlignment(Qt.AlignmentFlag.AlignCenter)
        self.ui_filelist_group.setFlat(True)
        self.ui_filelist_group.setCheckable(False)
        self.ui_filelist_group.setChecked(False)
        
        self.ui_listview_sprites = QListView(self.ui_filelist_group)
        self.ui_listview_sprites.setObjectName(u"ui_listview_sprites")
        self.ui_listview_sprites.setGeometry(QRect(-1, 20, 211, 561))

        font = QFont()
        font.setFamilies([u"Roboto"])
        font.setPointSize(8)
        font.setBold(False)
        font.setItalic(False)
        font.setUnderline(False)
        font.setStrikeOut(False)
        font.setKerning(True)
        font.setStyleStrategy(QFont.PreferDefault)

        self.ui_listview_sprites.setFont(font)
        self.ui_listview_sprites.setLineWidth(2)
        self.ui_listview_sprites.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.ui_listview_sprites.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.ui_listview_sprites.setAutoScroll(True)
        self.ui_listview_sprites.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.ui_listview_sprites.setProperty(u"showDropIndicator", False)
        self.ui_listview_sprites.setModelColumn(0)
        self.ui_listview_sprites.setUniformItemSizes(False)
        self.ui_listview_animations = QListView(self.ui_filelist_group)
        self.ui_listview_animations.setObjectName(u"ui_listview_animations")
        self.ui_listview_animations.setGeometry(QRect(220, 20, 211, 561))
        self.ui_listview_animations.setFont(font)
        self.ui_listview_animations.setLineWidth(2)
        self.ui_listview_animations.setVerticalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.ui_listview_animations.setHorizontalScrollBarPolicy(Qt.ScrollBarPolicy.ScrollBarAsNeeded)
        self.ui_listview_animations.setAutoScroll(True)
        self.ui_listview_animations.setEditTriggers(QAbstractItemView.EditTrigger.NoEditTriggers)
        self.ui_listview_animations.setProperty(u"showDropIndicator", False)
        self.ui_listview_animations.setModelColumn(0)
        self.ui_listview_animations.setUniformItemSizes(False)

        self.ui_button_edit_animation = QPushButton(self.ui_filelist_group)
        self.ui_button_edit_animation.setObjectName(u"ui_button_edit_animation")
        self.ui_button_edit_animation.setGeometry(QRect(220, 590, 211, 30))
        self.ui_button_view_spritesheet = QPushButton(self.ui_filelist_group)
        self.ui_button_view_spritesheet.setObjectName(u"ui_button_view_spritesheet")
        self.ui_button_view_spritesheet.setGeometry(QRect(0, 590, 211, 30))

        self.ui_tabber_tools.addTab(self.ui_tab_spritesheet_extractor, "")
        self.ui_tab_spritemap_extractor = QWidget()
        self.ui_tab_spritemap_extractor.setObjectName(u"ui_tab_spritemap_extractor")
        self.ui_tabber_tools.addTab(self.ui_tab_spritemap_extractor, "")
        self.ui_tab_custom_extractor = QWidget()
        self.ui_tab_custom_extractor.setObjectName(u"ui_tab_custom_extractor")
        self.ui_tabber_tools.addTab(self.ui_tab_custom_extractor, "")

        self.progressBar = QProgressBar(self.centralwidget)
        self.progressBar.setObjectName(u"progressBar")
        self.progressBar.setGeometry(QRect(10, 10, 981, 20))
        sizePolicy.setHeightForWidth(self.progressBar.sizePolicy().hasHeightForWidth())
        self.progressBar.setSizePolicy(sizePolicy)
        self.progressBar.setMinimumSize(QSize(0, 0))
        self.progressBar.setMaximum(100)
        self.progressBar.setValue(0)
        self.progressBar.setAlignment(Qt.AlignmentFlag.AlignRight|Qt.AlignmentFlag.AlignTop|Qt.AlignmentFlag.AlignTrailing)
        self.progressBar.setTextVisible(True)
        self.progressBar.setOrientation(Qt.Orientation.Horizontal)
        self.progressBar.setInvertedAppearance(False)
        self.progressBar.setTextDirection(QProgressBar.Direction.TopToBottom)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QMenuBar(MainWindow)
        self.menubar.setObjectName(u"menubar")
        self.menubar.setGeometry(QRect(0, 0, 1000, 33))
        self.menuFile = QMenu(self.menubar)
        self.menuFile.setObjectName(u"menuFile")
        self.menuImport = QMenu(self.menubar)
        self.menuImport.setObjectName(u"menuImport")
        self.menuAdvanced = QMenu(self.menubar)
        self.menuAdvanced.setObjectName(u"menuAdvanced")
        self.menuHelp = QMenu(self.menubar)
        self.menuHelp.setObjectName(u"menuHelp")
        self.menuSettings = QMenu(self.menubar)
        self.menuSettings.setObjectName(u"menuSettings")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QStatusBar(MainWindow)
        self.statusbar.setObjectName(u"statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuImport.menuAction())
        self.menubar.addAction(self.menuAdvanced.menuAction())
        self.menubar.addAction(self.menuHelp.menuAction())
        self.menubar.addAction(self.menuSettings.menuAction())
        self.menuFile.addAction(self.actionSelect_directory)
        self.menuFile.addAction(self.actionSelect_files)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionClear_files_and_settings)
        self.menuImport.addSeparator()
        self.menuHelp.addAction(self.actionUser_Manual)
        self.menuSettings.addAction(self.actionPreferences)
        self.menuSettings.addSeparator()

        self.retranslateUi(MainWindow)

        self.ui_tabber_tools.setCurrentIndex(0)
        self.ui_button_save_directory.setDefault(False)
        self.ui_dropdown_resample_filter.setCurrentIndex(2)


        QMetaObject.connectSlotsByName(MainWindow)
    # setupUi

    def retranslateUi(self, MainWindow):
        MainWindow.setWindowTitle(QCoreApplication.translate("MainWindow", u"MainWindow", None))
        self.actionSelect_directory.setText(QCoreApplication.translate("MainWindow", u"Select directory", None))
        self.actionSelect_files.setText(QCoreApplication.translate("MainWindow", u"Select files", None))
        self.actionClear_files_and_settings.setText(QCoreApplication.translate("MainWindow", u"Clear files and settings", None))
        self.actionUser_Manual.setText(QCoreApplication.translate("MainWindow", u"User Manual", None))
        self.actionPreferences.setText(QCoreApplication.translate("MainWindow", u"Preferences", None))
#if QT_CONFIG(statustip)
        self.ui_input_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder with spritesheets. (Automatically looks for .png and .xml files).", None))
#endif // QT_CONFIG(statustip)
        self.ui_input_group.setTitle(QCoreApplication.translate("MainWindow", u"Input", None))
#if QT_CONFIG(statustip)
        self.ui_input_field.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.ui_input_field.setInputMask("")
        self.ui_input_field.setText("")
        self.ui_input_field.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter or browse for a directory with spritesheets", None))
#if QT_CONFIG(statustip)
        self.ui_button_select_directory.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder with spritesheets. (Automatically looks for .png and .xml files).", None))
#endif // QT_CONFIG(statustip)
        self.ui_button_select_directory.setText(QCoreApplication.translate("MainWindow", u"Select directory", None))
#if QT_CONFIG(tooltip)
        self.ui_button_select_files.setToolTip("")
#endif // QT_CONFIG(tooltip)
#if QT_CONFIG(statustip)
        self.ui_button_select_files.setStatusTip(QCoreApplication.translate("MainWindow", u"Manually select spritesheets and their data files.", None))
#endif // QT_CONFIG(statustip)
        self.ui_button_select_files.setText(QCoreApplication.translate("MainWindow", u"Select files", None))
#if QT_CONFIG(statustip)
        self.ui_output_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder for the extracted frames.", None))
#endif // QT_CONFIG(statustip)
        self.ui_output_group.setTitle(QCoreApplication.translate("MainWindow", u"Output", None))
#if QT_CONFIG(statustip)
        self.ui_output_field.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.ui_output_field.setInputMask("")
        self.ui_output_field.setText("")
        self.ui_output_field.setPlaceholderText(QCoreApplication.translate("MainWindow", u"Enter or browse for a save directory", None))
#if QT_CONFIG(statustip)
        self.ui_button_save_directory.setStatusTip(QCoreApplication.translate("MainWindow", u"Choose a folder for the extracted frames.", None))
#endif // QT_CONFIG(statustip)
        self.ui_button_save_directory.setText(QCoreApplication.translate("MainWindow", u"Select save directory", None))
#if QT_CONFIG(statustip)
        self.ui_actions_group.setStatusTip("")
#endif // QT_CONFIG(statustip)
        self.ui_actions_group.setTitle(QCoreApplication.translate("MainWindow", u"Actions", None))
#if QT_CONFIG(statustip)
        self.ui_checkbox_create_png.setStatusTip(QCoreApplication.translate("MainWindow", u"Create PNGs for each animation frame", None))
#endif // QT_CONFIG(statustip)
        self.ui_checkbox_create_png.setText(QCoreApplication.translate("MainWindow", u"Create PNGs", None))
#if QT_CONFIG(statustip)
        self.ui_checkbox_create_webp.setStatusTip(QCoreApplication.translate("MainWindow", u"Create WebPs for each sprite animation.", None))
#endif // QT_CONFIG(statustip)
        self.ui_checkbox_create_webp.setText(QCoreApplication.translate("MainWindow", u"Create WebPs", None))
#if QT_CONFIG(statustip)
        self.ui_checkbox_create_gif.setStatusTip(QCoreApplication.translate("MainWindow", u"Create GIFs for each sprite animation.", None))
#endif // QT_CONFIG(statustip)
        self.ui_checkbox_create_gif.setText(QCoreApplication.translate("MainWindow", u"Create GIFs", None))
#if QT_CONFIG(statustip)
        self.ui_extraction_settings_group.setStatusTip(QCoreApplication.translate("MainWindow", u" Global settings are applied to all animated images unless you choose to override for a specific animation.", None))
#endif // QT_CONFIG(statustip)
        self.ui_extraction_settings_group.setTitle(QCoreApplication.translate("MainWindow", u"Global Settings", None))
#if QT_CONFIG(statustip)
        self.ui_stepper_framerate.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the frame rate of the animation. (NOTE: The 'FPS' is converted to 'ms' and rounded to the nearest whole number).", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.ui_stepper_loopdelay.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets how long the last frame of the animation should be shown. (Recommended values 250-500ms).", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.ui_stepper_alpha_threshold.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the transparency threshold. Leave value at '0.50' if you're unsure. (GIFs only!).", None))
#endif // QT_CONFIG(statustip)
        self.ui_stepper_alpha_threshold.setPrefix("")
#if QT_CONFIG(statustip)
        self.ui_label_framerate.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the frame rate of the animation. (NOTE: The 'FPS' is converted to 'ms' and rounded to the nearest whole number).", None))
#endif // QT_CONFIG(statustip)
        self.ui_label_framerate.setText(QCoreApplication.translate("MainWindow", u"Frame Rate (FPS):", None))
#if QT_CONFIG(statustip)
        self.ui_label_loopdelay.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets how long the last frame of the animation should be shown. (Recommended values 250-500ms).", None))
#endif // QT_CONFIG(statustip)
        self.ui_label_loopdelay.setText(QCoreApplication.translate("MainWindow", u"Loop Delay (ms):", None))
#if QT_CONFIG(statustip)
        self.ui_label_alpha_threshold.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the transparency threshold. Leave value at '0.50' if you're unsure. (GIFs only!).", None))
#endif // QT_CONFIG(statustip)
        self.ui_label_alpha_threshold.setText(QCoreApplication.translate("MainWindow", u"Alpha Threshold:", None))
#if QT_CONFIG(statustip)
        self.ui_label_scale.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the image scale of generated animations.", None))
#endif // QT_CONFIG(statustip)
        self.ui_label_scale.setText(QCoreApplication.translate("MainWindow", u"Scale:", None))
#if QT_CONFIG(statustip)
        self.ui_stepper_scale.setStatusTip(QCoreApplication.translate("MainWindow", u"Sets the image scale of generated animations.", None))
#endif // QT_CONFIG(statustip)
        self.ui_stepper_scale.setPrefix("")
#if QT_CONFIG(statustip)
        self.ui_label_resample_filter.setStatusTip(QCoreApplication.translate("MainWindow", u"What algorithm to use when scaling images. Choose \"Nearest\" for pixel artstyle sprites, otherwise leave at default if unsure.", None))
#endif // QT_CONFIG(statustip)
        self.ui_label_resample_filter.setText(QCoreApplication.translate("MainWindow", u"Resample Filter:", None))
        self.ui_dropdown_resample_filter.setItemText(0, QCoreApplication.translate("MainWindow", u"Nearest", None))
        self.ui_dropdown_resample_filter.setItemText(1, QCoreApplication.translate("MainWindow", u"Bilinear", None))
        self.ui_dropdown_resample_filter.setItemText(2, QCoreApplication.translate("MainWindow", u"Bicubic", None))
        self.ui_dropdown_resample_filter.setItemText(3, QCoreApplication.translate("MainWindow", u"Lanczos", None))

#if QT_CONFIG(statustip)
        self.ui_dropdown_resample_filter.setStatusTip(QCoreApplication.translate("MainWindow", u"What algorithm to use when scaling images. Choose \"Nearest\" for pixel artstyle sprites, otherwise leave at default if unsure.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.ui_extra_settings_group.setStatusTip(QCoreApplication.translate("MainWindow", u"Other settings that may be useful.", None))
#endif // QT_CONFIG(statustip)
        self.ui_extra_settings_group.setTitle(QCoreApplication.translate("MainWindow", u"Extra Settings", None))
#if QT_CONFIG(statustip)
        self.ui_checkbox_crop_pngs.setStatusTip(QCoreApplication.translate("MainWindow", u"Crops every extracted PNG frame to the smallest possible size.", None))
#endif // QT_CONFIG(statustip)
        self.ui_checkbox_crop_pngs.setText(QCoreApplication.translate("MainWindow", u"Crop PNGs", None))
#if QT_CONFIG(statustip)
        self.ui_checkbox_hq_color.setStatusTip(QCoreApplication.translate("MainWindow", u"Enables a better color algorithm for GIFs.", None))
#endif // QT_CONFIG(statustip)
        self.ui_checkbox_hq_color.setText(QCoreApplication.translate("MainWindow", u"HQ Colors", None))
#if QT_CONFIG(statustip)
        self.ui_checkbox_variable_delay.setStatusTip(QCoreApplication.translate("MainWindow", u"Modify some frame delays slightly to get a more accurate fps result.", None))
#endif // QT_CONFIG(statustip)
        self.ui_checkbox_variable_delay.setText(QCoreApplication.translate("MainWindow", u"Variable Delay", None))
#if QT_CONFIG(statustip)
        self.ui_tab_button_start.setStatusTip(QCoreApplication.translate("MainWindow", u"Execute tasks.", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(whatsthis)
        self.ui_tab_button_start.setWhatsThis("")
#endif // QT_CONFIG(whatsthis)
        self.ui_tab_button_start.setText(QCoreApplication.translate("MainWindow", u"Start", None))
        self.ui_filelist_group.setTitle(QCoreApplication.translate("MainWindow", u"Filelist", None))
#if QT_CONFIG(statustip)
        self.ui_listview_sprites.setStatusTip(QCoreApplication.translate("MainWindow", u"Spritesheets found in the input folder", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.ui_listview_animations.setStatusTip(QCoreApplication.translate("MainWindow", u"Spritesheets found in the input folder", None))
#endif // QT_CONFIG(statustip)
#if QT_CONFIG(statustip)
        self.ui_button_edit_animation.setStatusTip(QCoreApplication.translate("MainWindow", u"Preview and edit the selected animation.", None))
#endif // QT_CONFIG(statustip)
        self.ui_button_edit_animation.setText(QCoreApplication.translate("MainWindow", u"View and edit animation", None))
#if QT_CONFIG(statustip)
        self.ui_button_view_spritesheet.setStatusTip(QCoreApplication.translate("MainWindow", u"Opens the selected spritesheet.", None))
#endif // QT_CONFIG(statustip)
        self.ui_button_view_spritesheet.setText(QCoreApplication.translate("MainWindow", u"View spritesheet", None))
        self.ui_tabber_tools.setTabText(self.ui_tabber_tools.indexOf(self.ui_tab_spritesheet_extractor), QCoreApplication.translate("MainWindow", u"Spritesheet Extractor", None))
        self.ui_tabber_tools.setTabText(self.ui_tabber_tools.indexOf(self.ui_tab_spritemap_extractor), QCoreApplication.translate("MainWindow", u"Spritemap Extractor", None))
        self.ui_tabber_tools.setTabText(self.ui_tabber_tools.indexOf(self.ui_tab_custom_extractor), QCoreApplication.translate("MainWindow", u"Custom", None))
#if QT_CONFIG(statustip)
        self.progressBar.setStatusTip(QCoreApplication.translate("MainWindow", u"Progress", None))
#endif // QT_CONFIG(statustip)
        self.menuFile.setTitle(QCoreApplication.translate("MainWindow", u"File", None))
        self.menuImport.setTitle(QCoreApplication.translate("MainWindow", u"Import", None))
        self.menuAdvanced.setTitle(QCoreApplication.translate("MainWindow", u"Advanced", None))
        self.menuHelp.setTitle(QCoreApplication.translate("MainWindow", u"Help", None))
        self.menuSettings.setTitle(QCoreApplication.translate("MainWindow", u"Settings", None))
    # retranslateUi

